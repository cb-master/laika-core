name: Laika PHP Compatibility Check

on:
  push:
    branches:
      - main
      - beta
    tags:
      - 'v*.*.*-stable'
      - 'v*.*.*-beta'
  pull_request:
    branches:
      - main

  workflow_dispatch:

jobs:
  ########################################################
  # 1/ TEST SUITE
  ########################################################
  php-compatibility:
    name: Run Tests (PHP ${{ matrix.php-version }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php-version: ['8.1','8.2','8.3','8.4']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir || echo ~/.composer/cache)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: |
            vendor
            ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, json, dom
          coverage: xdebug
          tools: composer

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Run PHP Compatibility check
        run: vendor/bin/phpcs --standard=phpcs.xml

      - name: Run Test Suite
        run: composer test

      - name: Initialize PHP compatibility table
        if: ${{ matrix.php-version == '8.1' }}
        run: |
          echo "| PHP Version | Compatibility |" >> $GITHUB_STEP_SUMMARY
          echo "|--------------|---------------|" >> $GITHUB_STEP_SUMMARY

      - name: Append PHP compatibility result
        if: success()
        run: echo "| PHP ${{ matrix.php-version }} | ‚úÖ |" >> $GITHUB_STEP_SUMMARY

      - name: Append PHP compatibility result (failed)
        if: failure()
        run: echo "| PHP ${{ matrix.php-version }} | ‚ùå |" >> $GITHUB_STEP_SUMMARY

  ########################################################
  # 2/ STATIC ANALYSIS & LINTING
  ########################################################
  lint:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    needs: [php-compatibility]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir || echo ~/.composer/cache)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: |
            vendor
            ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          tools: composer

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Run PHP CS Fixer (dry run)
        run: |
          composer global require friendsofphp/php-cs-fixer
          $(composer global config bin-dir --absolute)/php-cs-fixer fix src


  ########################################################
  # 3/ BUILD & RELEASE
  ########################################################
  release:
    name: Build & Release
    runs-on: ubuntu-latest
    needs: [lint]
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir || echo ~/.composer/cache)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: |
            vendor
            ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          tools: composer

      - name: Install dependencies (no dev)
        run: composer install --no-dev --prefer-dist --no-progress

      # Detect Release Channel
      - name: Define Release Channel and Artifact Name
        id: channel
        run: |
          if [[ "${{ github.ref_name }}" == *-beta ]]; then
            echo "CHANNEL=beta" >> $GITHUB_ENV
            echo "ARTIFACT=laika-core-beta" >> $GITHUB_ENV
          else
            echo "CHANNEL=stable" >> $GITHUB_ENV
            echo "ARTIFACT=laika-core-stable" >> $GITHUB_ENV
          fi

      # Prepare Build Artifact
      - name: Prepare release artifact
        run: |
          mkdir build
          cp -r src composer.json LICENSE README.md build/
          echo "${{ github.run_number }}" > build/VERSION
          cd build && zip -r ../${{ env.ARTIFACT }}.zip .

      # Generate Checksum
      - name: Generate artifact checksum
        run: sha256sum ${{ env.ARTIFACT }}.zip > ${{ env.ARTIFACT }}.zip.sha256

      # Upload Artifact
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT }}
          path: |
            ${{ env.ARTIFACT }}.zip
            ${{ env.ARTIFACT }}.zip.sha256
          retention-days: 30

      # Create GitHub Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: ${{ env.CHANNEL == 'beta' && true || false }}
          overwrite: true
          tag_name: ${{ github.ref_name }}
          name: "${{ env.CHANNEL == 'beta' && 'BETA' || 'STABLE' }} - ${{ github.ref_name }}"
          body: |
            üöÄ **Laika Framework Core ${{ env.CHANNEL == 'beta' && 'BETA' || 'STABLE' }} - ${{ github.ref_name }} Release**

            **Tag:** ${{ github.ref_name }}
            **Commit:** ${{ github.sha }}
            **Build #:** ${{ github.run_number }}

            **Artifacts:**
            - `${{ env.ARTIFACT }}.zip`
            - `${{ env.ARTIFACT }}.zip.sha256`

            ---
            ‚öôÔ∏è Released via CI Pipeline  
            üß© Channel: ${{ env.CHANNEL }}
          files: |
            ${{ env.ARTIFACT }}.zip
            ${{ env.ARTIFACT }}.zip.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}